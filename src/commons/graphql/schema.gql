# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  user_id: String!
  email: String!
  name: String!
  phone: String!
  address: String
  type: VEGAN_TYPE
  nickname: String
  isPro: CLASS_TYPE
  isSubs: SUB_TYPE
  SubsHistory: Int
  startDate: String
  endDate: String
  profilePic: String
}

enum VEGAN_TYPE {
  NON_VEGAN
  VEGAN
  LACTO
  OVO
  LACTO_OVO
  PESCO
  POLLO
}

enum CLASS_TYPE {
  PRO
  COMMON
}

enum SUB_TYPE {
  NON_SUB
  BASIC
  PREMIUM
}

type PaymentTransaction {
  id: String!
  impUid: String!
  amount: Int!
  status: TRANSACTION_STATUS_ENUM!
  user: User!
}

enum TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

type Recipes {
  id: String!
  title: String!
  summary: String!
  types: CATEGORY_TYPES!
  image_urls: String
  cookTime: Int!
  level: COOKING_LEVEL!
  serve: Int!
  user: User!
}

enum CATEGORY_TYPES {
  ALL
  VEGAN
  LACTO
  OVO
  LACTO_OVO
  PESCO
  POLLO
}

enum COOKING_LEVEL {
  SIMPLE
  NORMAL
  DIFFICULT
}

input user {
  user_id: String!
  email: String!
  name: String!
  phone: String!
  address: String
  type: VEGAN_TYPE
  nickname: String
  isPro: CLASS_TYPE
  isSubs: SUB_TYPE
  SubsHistory: Int
  startDate: String
  endDate: String
  profilePic: String
}

type Query {
  fetchUser: User!
  fetchUsers: [User!]!
  fetchRecipesAll: [Recipes!]!
  fetchRecipeTypes(recipes_id: String!, vegan_types: String!): Recipes!
  fetchMyRecipe(id: String!, user_id: String!): Recipes!
  fetchRecipeIsPro(isPro: String!): Recipes!
  fetchTransactionAll: [PaymentTransaction!]!
  fetchimpUidwithUserid(userid: String!): PaymentTransaction!
}

type Mutation {
  login(email: String!, password: String!): String!
  logout: String!
  restoreAccessToken: String!
  createUser(email: String!, password: String!, name: String!, phone: String!): User!
  getToken(phone: String!): String!
  checkValidToken(phone: String!, token: String!): String!
  updateUser(user_id: String!, updateUserInput: UpdateUserInput!): User!
  uploadProfileImage(file: Upload!): String!
  deleteProfileImage(user_id: String!): String!
  deleteUser(user_id: String!): User!
  createRecipe(createRecipesInput: CreateRecipesInput!, image_urls: [String!]!): Recipes!
  updateRecipe(recipe_id: String!, updateRecipesInput: UpdateRecipesInput!): Recipes!
  deleteRecipe(recipe_id: String!): Boolean!
  createPaymentTransaction(impUid: String!, amount: Float!): PaymentTransaction!
  cancelPaymentTransaction(impUid: String!): PaymentTransaction!
}

input UpdateUserInput {
  password: String
  name: String
  phone: String
  address: String
  type: String
  nickname: String
  isPro: String
  isSubs: Boolean
  profilePic: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateRecipesInput {
  title: String!
  summary: String!
  types: String!
  image_urls: [String!] = null
  cookTime: Int!
  level: String!
  serve: Int!
}

input UpdateRecipesInput {
  title: String
  summary: String
  types: String
  image_urls: [String!] = null
  cookTime: Int
  level: String
  serve: Int
}