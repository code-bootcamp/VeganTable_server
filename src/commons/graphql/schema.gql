# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type RecipesIngredients {
  id: String!
  name: String!
  recipes: [Recipes!]!
}

type RecipesTag {
  id: String!
  name: String!
  recipes: [Recipes!]!
}

type Recipes {
  id: String!
  title: String!
  summary: String!
  types: CATEGORY_TYPES
  cookTime: Int!
  level: COOKING_LEVEL
  user: User!
  ingredients: [RecipesIngredients!]!
  recipesTags: [RecipesTag!]!
  scrapCount: Int!
}

enum CATEGORY_TYPES {
  NON_CHECKED
  VEGAN
  LACTO
  OVO
  LACTO_OVO
  PESCO
  POLLO
}

enum COOKING_LEVEL {
  SIMPLE
  NORMAL
  DIFFICULT
}

type RecipeScrap {
  scrap_id: String!
  user: User!
  recipes: Recipes!
  scraped: Boolean!
}

type User {
  user_id: String!
  email: String!
  name: String!
  phone: String!
  address: String
  addressDetail: String
  type: VEGAN_TYPE
  nickname: String
  isPro: CLASS_TYPE
  isSubs: SUB_TYPE
  SubsHistory: Int
  startDate: String
  endDate: String
  profilePic: String
  scrapCount: RecipeScrap
  deletedAt: DateTime
}

enum VEGAN_TYPE {
  NON_Vegan
  Vegan
  Lacto
  Ovo
  Lacto_Ovo
  Pesco
  Pollo
}

enum CLASS_TYPE {
  PRO
  COMMON
}

enum SUB_TYPE {
  NON_SUB
  BASIC
  PREMIUM
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PaymentTransaction {
  id: String!
  impUid: String!
  amount: Int!
  status: TRANSACTION_STATUS_ENUM!
  user: User!
}

enum TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

type RecipesReply {
  reply_id: String!
  contents: String!
  recipes: Recipes!
  user: User!
}

type Query {
  fetchUser: User!
  fetchUsers: [User!]!
  fetchUsersWithDel: [User!]!
  fetchRecipes: [Recipes!]!
  fetchRecipeTypes(vegan_types: String!): [Recipes!]!
  fetchMyRecipe(id: String!, user_id: String!): Recipes!
  fetchRecipeIsPro(isPro: String!): Recipes!
  fetchTransactionAll: [PaymentTransaction!]!
  fetchimpUidwithUserid(userid: String!): PaymentTransaction!
  fetchReplies(id: String!): [RecipesReply!]!
  fetchMyScraps: [Recipes!]!
}

type Mutation {
  login(email: String!, password: String!): String!
  logout: String!
  restoreAccessToken: String!
  createUser(
    email: String!
    password: String!
    name: String!
    phone: String!
  ): User!
  getToken(phone: String!): String!
  checkValidToken(phone: String!, token: String!): String!
  updateUser(user_id: String!, updateUserInput: UpdateUserInput!): User!
  updatePassword(user_id: String!, password: String!): User!
  uploadProfileImage(file: Upload!): String!
  deleteProfileImage(user_id: String!): String!
  deleteUser(user_id: String!): User!
  createRecipe(createRecipesInput: CreateRecipesInput!): Recipes!
  updateRecipe(
    recipe_id: String!
    updateRecipesInput: UpdateRecipesInput!
  ): Recipes!
  deleteRecipe(recipe_id: String!): Boolean!
  uploadRecipeImages(files: [Upload!]!): [String!]!
  deleteRecipeImages(id: String!): [String!]!
  createPaymentTransaction(impUid: String!, amount: Float!): PaymentTransaction!
  cancelPaymentTransaction(impUid: String!): PaymentTransaction!
  createReply(user_id: String!, contents: String!, id: String!): String!
  updateReply(reply_id: String!, contents: String!): String!
  deleteRely(reply_id: String!): String!
  clickScrap(id: String!): RecipeScrap!
}

input UpdateUserInput {
  name: String
  phone: String
  address: String
  addressDetail: String
  type: String
  nickname: String
  isPro: String
  isSubs: Boolean
  profilePic: String
}

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

input CreateRecipesInput {
  title: String!
  summary: String!
  types: [String!]!
  url: [String!]!
  description: [String!]!
  cookTime: Int!
  level: [String!]!
  ingredients: [String!]!
  recipesTags: [String!]!
  scrapCount: Int!
}

input UpdateRecipesInput {
  title: String
  summary: String
  types: [String!]
  url: [String!]
  description: [String!]
  cookTime: Int
  level: [String!]
  ingredients: [String!]
  recipesTags: [String!]
  scrapCount: Int
}
